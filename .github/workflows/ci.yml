name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
  push:
    branches:
      - master

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      -
        name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.4
      -
        name: poetry install
        run: |
          poetry install
      -
        name: lint
        run: |
          poetry run pre-commit run --all-files
      -
        name: pytest
        run: |
          poetry run coverage run --source=kube_ops_view -m py.test -v
          poetry run coverage report

  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: quay.io
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Prepare Tags
        if: success()
        id: prep
        run: |
          DOCKER_IMAGE=${DOCKER_REGISTRY}/${{ github.repository }}
          VERSION=$(git describe --tags --always --dirty)
          SEMVER=${VERSION%-*-*}
          MAJORVER=${VERSION%.*.*}
          MINORVER=${VERSION%.*}

          echo ::set-output name=tags::${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SEMVER},${DOCKER_IMAGE}:${MAJORVER},${DOCKER_IMAGE}:${MINORVER}
      -
        name: Docker Login
        if: success()
        run: |
          echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Available QEMU Platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Docker Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
      -
        name: Log Image metadata
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
          echo ${{ steps.prep.outputs.tags }}
